{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CollateralInfoResponse",
  "type": "object",
  "required": [
    "asset",
    "collateral_premium",
    "query_request"
  ],
  "properties": {
    "asset": {
      "type": "string"
    },
    "collateral_premium": {
      "$ref": "#/definitions/Decimal"
    },
    "query_request": {
      "$ref": "#/definitions/WasmQuery"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "HumanAddr": {
      "type": "string"
    },
    "WasmQuery": {
      "anyOf": [
        {
          "description": "this queries the public API of another contract at a known address (with known ABI) return value is whatever the contract returns (caller should know)",
          "type": "object",
          "required": [
            "smart"
          ],
          "properties": {
            "smart": {
              "type": "object",
              "required": [
                "contract_addr",
                "msg"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "msg": {
                  "description": "msg is the json-encoded QueryMsg struct",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Binary"
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "description": "this queries the raw kv-store of the contract. returns the raw, unparsed data stored at that key (or `Ok(Err(StdError:NotFound{}))` if missing)",
          "type": "object",
          "required": [
            "raw"
          ],
          "properties": {
            "raw": {
              "type": "object",
              "required": [
                "contract_addr",
                "key"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "key": {
                  "description": "Key is the raw key used in the contracts Storage",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Binary"
                    }
                  ]
                }
              }
            }
          }
        }
      ]
    }
  }
}
