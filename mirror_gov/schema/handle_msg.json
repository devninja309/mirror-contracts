{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "cast_vote"
      ],
      "properties": {
        "cast_vote": {
          "type": "object",
          "required": [
            "poll_id",
            "vote",
            "weight"
          ],
          "properties": {
            "poll_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "vote": {
              "type": "string"
            },
            "weight": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "withdraw_voting_tokens"
      ],
      "properties": {
        "withdraw_voting_tokens": {
          "type": "object",
          "properties": {
            "amount": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "create_poll"
      ],
      "properties": {
        "create_poll": {
          "type": "object",
          "required": [
            "description"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "end_height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "execute_msg": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExecuteMsg"
                },
                {
                  "type": "null"
                }
              ]
            },
            "quorum_percentage": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "start_height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "end_poll"
      ],
      "properties": {
        "end_poll": {
          "type": "object",
          "required": [
            "poll_id"
          ],
          "properties": {
            "poll_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Receive is cw20 token send handler",
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg",
      "type": "object",
      "required": [
        "amount",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        }
      }
    },
    "ExecuteMsg": {
      "type": "object",
      "required": [
        "contract",
        "msg"
      ],
      "properties": {
        "contract": {
          "$ref": "#/definitions/HumanAddr"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "Uint128": {
      "type": "string"
    }
  }
}
