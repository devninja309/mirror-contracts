{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PollResponse",
  "type": "object",
  "required": [
    "creator",
    "deposit_amount",
    "description",
    "end_height",
    "id",
    "status",
    "title"
  ],
  "properties": {
    "creator": {
      "$ref": "#/definitions/HumanAddr"
    },
    "deposit_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "description": {
      "type": "string"
    },
    "end_height": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "execute_data": {
      "anyOf": [
        {
          "$ref": "#/definitions/ExecuteMsg"
        },
        {
          "type": "null"
        }
      ]
    },
    "id": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "link": {
      "type": [
        "string",
        "null"
      ]
    },
    "status": {
      "$ref": "#/definitions/PollStatus"
    },
    "title": {
      "type": "string"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "ExecuteMsg": {
      "type": "object",
      "required": [
        "contract",
        "msg"
      ],
      "properties": {
        "contract": {
          "$ref": "#/definitions/HumanAddr"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "PollStatus": {
      "type": "string",
      "enum": [
        "in_progress",
        "passed",
        "rejected",
        "executed"
      ]
    },
    "Uint128": {
      "type": "string"
    }
  }
}
